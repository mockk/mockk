public final class io/mockk/springmockk/ClearMocksTestExecutionListener : org/springframework/test/context/support/AbstractTestExecutionListener {
	public fun <init> ()V
	public fun afterTestMethod (Lorg/springframework/test/context/TestContext;)V
	public fun beforeTestMethod (Lorg/springframework/test/context/TestContext;)V
	public fun getOrder ()I
}

public class io/mockk/springmockk/Definition {
	public fun <init> (Ljava/lang/String;Lio/mockk/springmockk/MockkClear;Lio/mockk/springmockk/QualifierDefinition;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getClear ()Lio/mockk/springmockk/MockkClear;
	public final fun getName ()Ljava/lang/String;
	public final fun getQualifier ()Lio/mockk/springmockk/QualifierDefinition;
	public fun hashCode ()I
}

public final class io/mockk/springmockk/DefinitionsParser {
	public fun <init> ()V
	public fun <init> (Ljava/util/Collection;)V
	public synthetic fun <init> (Ljava/util/Collection;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getField (Lio/mockk/springmockk/Definition;)Ljava/lang/reflect/Field;
	public final fun getParsedDefinitions ()Ljava/util/Set;
	public final fun parse (Ljava/lang/Class;)V
}

public abstract interface annotation class io/mockk/springmockk/MockkBean : java/lang/annotation/Annotation {
	public abstract fun classes ()[Ljava/lang/Class;
	public abstract fun clear ()Lio/mockk/springmockk/MockkClear;
	public abstract fun extraInterfaces ()[Ljava/lang/Class;
	public abstract fun name ()Ljava/lang/String;
	public abstract fun relaxUnitFun ()Z
	public abstract fun relaxed ()Z
	public abstract fun value ()[Ljava/lang/Class;
}

public abstract interface annotation class io/mockk/springmockk/MockkBeans : java/lang/annotation/Annotation {
	public abstract fun value ()[Lio/mockk/springmockk/MockkBean;
}

public final class io/mockk/springmockk/MockkClear : java/lang/Enum {
	public static final field AFTER Lio/mockk/springmockk/MockkClear;
	public static final field BEFORE Lio/mockk/springmockk/MockkClear;
	public static final field Companion Lio/mockk/springmockk/MockkClear$Companion;
	public static final field NONE Lio/mockk/springmockk/MockkClear;
	public static fun valueOf (Ljava/lang/String;)Lio/mockk/springmockk/MockkClear;
	public static fun values ()[Lio/mockk/springmockk/MockkClear;
}

public final class io/mockk/springmockk/MockkClear$Companion {
	public final fun get (Ljava/lang/Object;)Lio/mockk/springmockk/MockkClear;
}

public final class io/mockk/springmockk/MockkClearKt {
	public static final fun clear (Ljava/lang/Object;Lio/mockk/springmockk/MockkClear;)Ljava/lang/Object;
}

public final class io/mockk/springmockk/MockkContextCustomizer : org/springframework/test/context/ContextCustomizer {
	public fun <init> (Ljava/util/Set;)V
	public final fun copy (Ljava/util/Set;)Lio/mockk/springmockk/MockkContextCustomizer;
	public static synthetic fun copy$default (Lio/mockk/springmockk/MockkContextCustomizer;Ljava/util/Set;ILjava/lang/Object;)Lio/mockk/springmockk/MockkContextCustomizer;
	public fun customizeContext (Lorg/springframework/context/ConfigurableApplicationContext;Lorg/springframework/test/context/MergedContextConfiguration;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/mockk/springmockk/MockkContextCustomizerFactory : org/springframework/test/context/ContextCustomizerFactory {
	public fun <init> ()V
	public fun createContextCustomizer (Ljava/lang/Class;Ljava/util/List;)Lorg/springframework/test/context/ContextCustomizer;
}

public final class io/mockk/springmockk/MockkDefinition : io/mockk/springmockk/Definition {
	public fun <init> (Ljava/lang/String;Lorg/springframework/core/ResolvableType;[Lkotlin/reflect/KClass;Lio/mockk/springmockk/MockkClear;ZZLio/mockk/springmockk/QualifierDefinition;)V
	public synthetic fun <init> (Ljava/lang/String;Lorg/springframework/core/ResolvableType;[Lkotlin/reflect/KClass;Lio/mockk/springmockk/MockkClear;ZZLio/mockk/springmockk/QualifierDefinition;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun createMock ()Ljava/lang/Object;
	public final fun createMock (Ljava/lang/String;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getExtraInterfaces ()Ljava/util/Set;
	public final fun getRelaxUnitFun ()Z
	public final fun getRelaxed ()Z
	public final fun getTypeToMock ()Lorg/springframework/core/ResolvableType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class io/mockk/springmockk/MockkFunctionsKt {
	public static final fun isMock (Ljava/lang/Object;)Z
}

public final class io/mockk/springmockk/MockkPostProcessor : org/springframework/beans/factory/BeanClassLoaderAware, org/springframework/beans/factory/BeanFactoryAware, org/springframework/beans/factory/config/BeanFactoryPostProcessor, org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessor, org/springframework/core/Ordered {
	public static final field Companion Lio/mockk/springmockk/MockkPostProcessor$Companion;
	public fun <init> (Ljava/util/Set;)V
	public fun getOrder ()I
	public fun postProcessBeanFactory (Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
	public fun postProcessProperties (Lorg/springframework/beans/PropertyValues;Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/beans/PropertyValues;
	public fun setBeanClassLoader (Ljava/lang/ClassLoader;)V
	public fun setBeanFactory (Lorg/springframework/beans/factory/BeanFactory;)V
}

public final class io/mockk/springmockk/MockkPostProcessor$Companion {
	public final fun register (Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Ljava/lang/Class;Ljava/util/Set;)V
	public static synthetic fun register$default (Lio/mockk/springmockk/MockkPostProcessor$Companion;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;Ljava/lang/Class;Ljava/util/Set;ILjava/lang/Object;)V
}

public final class io/mockk/springmockk/MockkTestExecutionListener : org/springframework/test/context/support/AbstractTestExecutionListener {
	public fun <init> ()V
	public fun beforeTestMethod (Lorg/springframework/test/context/TestContext;)V
	public fun getOrder ()I
	public fun prepareTestInstance (Lorg/springframework/test/context/TestContext;)V
}

public final class io/mockk/springmockk/QualifierDefinition {
	public static final field Companion Lio/mockk/springmockk/QualifierDefinition$Companion;
	public fun <init> (Ljava/lang/reflect/Field;Ljava/util/Set;)V
	public final fun applyTo (Lorg/springframework/beans/factory/support/RootBeanDefinition;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun matches (Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;Ljava/lang/String;)Z
}

public final class io/mockk/springmockk/QualifierDefinition$Companion {
	public final fun forElement (Ljava/lang/reflect/AnnotatedElement;)Lio/mockk/springmockk/QualifierDefinition;
}

public abstract interface annotation class io/mockk/springmockk/SpykBean : java/lang/annotation/Annotation {
	public abstract fun classes ()[Ljava/lang/Class;
	public abstract fun clear ()Lio/mockk/springmockk/MockkClear;
	public abstract fun name ()Ljava/lang/String;
	public abstract fun value ()[Ljava/lang/Class;
}

public abstract interface annotation class io/mockk/springmockk/SpykBeans : java/lang/annotation/Annotation {
	public abstract fun value ()[Lio/mockk/springmockk/SpykBean;
}

public final class io/mockk/springmockk/SpykDefinition : io/mockk/springmockk/Definition {
	public fun <init> (Ljava/lang/String;Lorg/springframework/core/ResolvableType;Lio/mockk/springmockk/MockkClear;Lio/mockk/springmockk/QualifierDefinition;)V
	public synthetic fun <init> (Ljava/lang/String;Lorg/springframework/core/ResolvableType;Lio/mockk/springmockk/MockkClear;Lio/mockk/springmockk/QualifierDefinition;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun createSpy (Ljava/lang/Object;)Ljava/lang/Object;
	public final fun createSpy (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getTypeToSpy ()Lorg/springframework/core/ResolvableType;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

