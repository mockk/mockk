plugins {
    id("mpp-jvm")
}

ext {
    mavenName = 'MockK Java Agent'
    mavenDescription = 'MockK inline mocking agent'
}

apply from: "${gradles}/jacoco.gradle"
apply from: "${gradles}/additional-archives.gradle"
apply from: "${gradles}/upload.gradle"

dependencies {
    api project(':mockk-agent-api')
    api project(':mockk-agent-common')

    api "org.objenesis:objenesis:_"

    api "net.bytebuddy:byte-buddy:_"
    api "net.bytebuddy:byte-buddy-agent:_"

    implementation "org.jetbrains.kotlin:kotlin-reflect:_"
}

def copyMockKDispatcher =
    tasks.register("copyMockKDispatcher", Copy) {
        dependsOn compileJava
        dependsOn compileKotlin

        def mockKDispatcherDir =
            sourceSets.main.java.classesDirectory
                .map { "$it/io/mockk/proxy/jvm/dispatcher" }

        from(mockKDispatcherDir) {
            include "JvmMockKDispatcher.class"
            include "JvmMockKWeakMap.class"
            include "JvmMockKWeakMap\$StrongKey.class"
            include "JvmMockKWeakMap\$WeakKey.class"

            rename { String fileName ->
                fileName.replace('.class', '.clazz')
            }
        }
        into mockKDispatcherDir
    }

tasks.named("classes") {
    dependsOn copyMockKDispatcher
}

jar {
    exclude "io/mockk/proxy/jvm/dispatcher/JvmMockKDispatcher.class"
    exclude "io/mockk/proxy/jvm/dispatcher/JvmMockKWeakMap*.class"
}
