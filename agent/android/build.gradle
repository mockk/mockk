ext {
    mavenName = 'MockK Android Agent'
    mavenDescription = 'Android instrumented testing MockK inline mocking agent'
}

apply plugin: 'com.android.library'
apply from: "${gradles}/android-module.gradle"
apply from: "${gradles}/upload-archives-android.gradle"

def dispatcherApkResPath = file("$buildDir/generated/dispatcher-apk")
def dispatcherDexResPath = file("$buildDir/generated/dispatcher-dex")
def dispatcherJarResPath = file("$buildDir/generated/dispatcher-jar")
def apkReleaseDispatcherPath = new File(project(':mockk-agent-android-dispatcher').buildDir, "outputs/apk/release")

task copyDispatcherApk(type: Copy) {
    dependsOn ':mockk-agent-android-dispatcher:assembleRelease'
    from apkReleaseDispatcherPath
    into dispatcherApkResPath
    include '*.apk'
    rename { "dispatcher.apk" }
}

task unzipDispatcherApk(type: Copy) {
    dependsOn copyDispatcherApk
    from zipTree(new File(dispatcherApkResPath, 'dispatcher.apk'))
    into dispatcherDexResPath
    include '*.dex'
    rename { "classes.dex" }
}

task packageDispatcherJar(type: Jar) {
    dependsOn unzipDispatcherApk
    archiveName = "dispatcher.jar"
    destinationDir = dispatcherJarResPath

    from dispatcherDexResPath
}
preBuild.dependsOn(packageDispatcherJar)

android {
    compileSdkVersion 'android-28'
    buildToolsVersion android_build_tools_version

    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
        warning 'NewApi'
    }

    sourceSets {
        main.resources.srcDirs += dispatcherJarResPath
        main.resources.includes += "**/*.jar"
        main.java.srcDirs += 'src/main/kotlin'
    }

    packagingOptions {
        exclude 'META-INF/main.kotlin_module'
    }

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 27
        versionName project['version']
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "notAnnotation", "io.mockk.test.SkipInstrumentedAndroidTest"

        ndk {
            abiFilters "armeabi-v7a", "x86", "x86_64", "arm64-v8a"
        }
    }

    externalNativeBuild {
        cmake {
            path = 'CMakeLists.txt'
        }
    }
}


dependencies {
    implementation project(':mockk-agent-api')
    implementation project(':mockk-agent-common')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "com.linkedin.dexmaker:dexmaker:$dexmaker_version"
    implementation "org.objenesis:objenesis:$objenesis_version"
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation 'junit:junit:4.12'
}
