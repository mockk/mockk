apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

def dispatcherApkResPath = file("$buildDir/generated/dispatcher-apk")
def dispatcherDexResPath = file("$buildDir/generated/dispatcher-dex")
def dispatcherJarResPath = file("$buildDir/generated/dispatcher-jar")
def apkReleaseDispatcherPath = new File(project(':mockk-agent-android-dispatcher').buildDir, "outputs/apk/release")

task copyDispatcherApk(type: Copy) {
    dependsOn ':mockk-agent-android-dispatcher:assembleRelease'
    from apkReleaseDispatcherPath
    into dispatcherApkResPath
    include '*.apk'
    rename { "dispatcher.apk" }
}

task unzipDispatcherApk(type: Copy) {
    dependsOn copyDispatcherApk
    from zipTree(new File(dispatcherApkResPath, 'dispatcher.apk'))
    into dispatcherDexResPath
    include '*.dex'
    rename { "classes.dex" }
}

task packageDispatcherJar(type: Jar) {
    dependsOn unzipDispatcherApk
    archiveName = "dispatcher.jar"
    destinationDir = dispatcherJarResPath

    from dispatcherDexResPath
}
preBuild.dependsOn(packageDispatcherJar)

android {
    compileSdkVersion 'android-P'
    buildToolsVersion '27.0.3'

    lintOptions {
        abortOnError false
        disable 'InvalidPackage'
        warning 'NewApi'
    }

    sourceSets {
        main.resources.srcDirs += dispatcherJarResPath
        main.resources.includes += "**/*.jar"
        main.java.srcDirs += 'src/main/kotlin'
    }

    packagingOptions {
        exclude 'META-INF/main.kotlin_module'
    }

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 27
        versionName project['version']
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "notAnnotation", "io.mockk.test.SkipInstrumentedAndroidTest"
    }

    externalNativeBuild {
        cmake {
            path = 'CMakeLists.txt'
        }
    }

}


dependencies {
    implementation project(':mockk-agent-api')
    implementation project(':mockk-agent-common')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "com.linkedin.dexmaker:dexmaker:$dexmaker_version"
    implementation "org.objenesis:objenesis:$objenesis_version"
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation 'junit:junit:4.12'
}

afterEvaluate { project ->
    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                if (project.hasProperty('localrepo')) {
                    repository(url: "file://" + rootProject.properties['localrepo'] ?: '')
                } else {
                    repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                        authentication(userName: rootProject.properties['ossrhUsername'] ?: '', password: rootProject.properties['ossrhPassword'] ?: '')
                    }

                    snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                        authentication(userName: rootProject.properties['ossrhUsername'] ?: '', password: rootProject.properties['ossrhPassword'] ?: '')
                    }
                }

                pom.project {
                    name 'MockK Android Agent'
                    packaging 'aar'
                    description 'Android instrumented testing MockK inline mocking agent'
                    url 'http://mockk.io'

                    scm {
                        connection 'scm:git:git@github.com:mockk/mockk.git'
                        developerConnection 'scm:git:git@github.com:mockk/mockk.git'
                        url 'http://www.github.com/mockk/mockk/'
                    }

                    licenses {
                        license {
                            name 'Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0'
                        }
                    }

                    developers {
                        developer {
                            id 'oleksiyp'
                            name 'Oleksii Pylypenko'
                            email 'oleksiy.pylypenko@gmail.com'
                        }
                    }
                }
            }
        }
    }
}